
  <div class="chartBox mx-auto">
    <canvas id="myChartBarCommandesProfiles"></canvas>
  </div>

    <% @labels_profiles = @stats_par_profile.map { |stat| stat[:profile] } %>
    <% @data_profiles = @stats_par_profile.map { |stat| stat[:commandes] } %>
    <% @colors_profiles = @stats_par_profile.map { |stat| stat[:couleur] } %>

<script>
   
  var couleur1 = 'rgb(116, 159, 130)';
  var couleur2 = 'rgb(66, 95, 87)';

// CHART BAR
    var dataBarCa = {
      labels: <%= @labels_profiles.to_json.html_safe %>,
      datasets: [{
      
        data: <%= @data_profiles.to_json.html_safe %>,
        fill: true,
        backgroundColor: <%= @colors_profiles.to_json.html_safe %>,
        borderWidth: 1
      }]
    };

    var delayedBarCa;

    var configBarCa = {
      type: 'doughnut',
      data: dataBarCa,
      options: {
        plugins: {
          legend: {
            display: true,
            position: 'bottom'
          },
          title: {
            display: true,
            text: 'Commandes',
            font: {
              size: 14
            },
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                const value = context.parsed;
                const profil = context.label;
                return `${profil} : ${value} commandes`;
              }
            }
          }
        },
        aspectRatio: 1
      }
    };

        // render init block
  
    var myChartBarCommandesProfiles = new Chart(
      document.getElementById('myChartBarCommandesProfiles'),
      configBarCa
    );


</script>